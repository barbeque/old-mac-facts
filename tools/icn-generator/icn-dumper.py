icon = """
    0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0xF0, 0x0,
    0x0, 0x30, 0xC, 0x0, 0x0, 0xC0, 0x3, 0x0,
    0x1, 0x80, 0x3, 0x80, 0x3, 0xE2, 0x1F, 0xC0,
    0x7, 0xC0, 0x1D, 0xE0, 0xF, 0x80, 0x87, 0xF0,
    0xF, 0x1, 0x8F, 0xF0, 0xE, 0x0, 0x7F, 0x30,
    0x1E, 0x0, 0xFD, 0x78, 0x12, 0x0, 0xE4, 0xF8,
    0x10, 0x0, 0x40, 0xF8, 0x10, 0x0, 0x3E, 0x78,
    0x1F, 0x0, 0x7F, 0xF8, 0x1F, 0x80, 0x7F, 0xF8,
    0xF, 0x80, 0x3F, 0x30, 0xF, 0x80, 0xF, 0x30,
    0xF, 0x80, 0xE, 0x90, 0x7, 0x80, 0xE, 0xA0,
    0x3, 0xC0, 0xE, 0x40, 0x7F, 0xFF, 0xFF, 0xFE,
    0x20, 0x0, 0x0, 0x4, 0x1F, 0xFF, 0xFF, 0xF8,
    0x0, 0x4, 0x40, 0x0, 0x0, 0x4, 0x40, 0x0,
    0x0, 0x3, 0x80, 0x0, 0x0, 0x4, 0x40, 0x0,
    0xAF, 0xF9, 0x3F, 0xF5, 0x0, 0x2, 0x80, 0x0,
    0xAF, 0xFC, 0x7F, 0xF5, 0x0, 0x0, 0x0, 0x0,
    0x0, 0x0, 0x0, 0x0, 0x0, 0xF, 0xF0, 0x0,
    0x0, 0x3F, 0xFC, 0x0, 0x0, 0xFF, 0xFF, 0x0,
    0x1, 0xFF, 0xFF, 0x80, 0x3, 0xFF, 0xFF, 0xC0,
    0x7, 0xFF, 0xFF, 0xE0, 0xF, 0xFF, 0xFF, 0xF0,
    0xF, 0xFF, 0xFF, 0xF0, 0xF, 0xFF, 0xFF, 0xF0,
    0x1F, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xF8,
    0x1F, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xF8,
    0x1F, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xF8,
    0xF, 0xFF, 0xFF, 0xF0, 0xF, 0xFF, 0xFF, 0xF0,
    0xF, 0xFF, 0xFF, 0xF0, 0x7, 0xFF, 0xFF, 0xE0,
    0x3, 0xFF, 0xFF, 0xC0, 0x7F, 0xFF, 0xFF, 0xFE,
    0x3F, 0xFF, 0xFF, 0xFC, 0x1F, 0xFF, 0xFF, 0xF8,
    0x0, 0x7, 0xC0, 0x0, 0x0, 0x7, 0xC0, 0x0,
    0x0, 0x3, 0x80, 0x0, 0x0, 0x7, 0xC0, 0x0,
    0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF,
    0xFF, 0xFC, 0x7F, 0xFF, 0x0, 0x0, 0x0, 0x0
"""

from PIL import Image
parsed = [ int(b.strip(), 16) for b in icon.split(',') ]
assert(len(parsed) == 256)

icon_part = parsed[:128]
mask_part = parsed[128:]
assert(len(icon_part) == 128)
assert(len(mask_part) == 128)

def dump(bytes, path):
	image = Image.new('1', (32, 32))
	for y in range(0, 32):
		for x in range(0, 32 // 8):
			raw = bytes[y * 4 + x]
			image.putpixel((x * 8, y), not raw & 0x80)
			image.putpixel((x * 8 + 1, y), not raw & 0x40)
			image.putpixel((x * 8 + 2, y), not raw & 0x20)
			image.putpixel((x * 8 + 3, y), not raw & 0x10)
			image.putpixel((x * 8 + 4, y), not raw & 0x08)
			image.putpixel((x * 8 + 5, y), not raw & 0x04)
			image.putpixel((x * 8 + 6, y), not raw & 0x02)
			image.putpixel((x * 8 + 7, y), not raw & 0x01)
	image.save(path)

dump(icon_part, '_icon.png')
dump(mask_part, '_mask.png')
